version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - microservices_network
      
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka_service
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/var/lib/kafka/data 
    depends_on:
      - zookeeper
    networks:
      - microservices_network
   
  expose_api:
    extends:
      file: API/docker-compose.yml
      service: expose_api
    environment:
      - groupID=ExposeAPIService
      - bootstrapServers=kafka:9093
      - topic_to_userdata=topic_to_userdata
      - topic_to_configuration=topic_to_configuration
      - topic_to_scheduler=topic_to_scheduler
      - topic_to_notifier=topic_to_notifier
      - topic_to_weather=topic_to_weather
      - topic_to_mail=topic_to_mail
      - topic_to_telegram=topic_to_telegram
      - partition=partition
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  expose_api_db:
    extends:
      file: API/docker-compose.yml
      service: expose_api_db
      
  
  configurator_service:
    extends:
      file: ConfiguratorService/docker-compose.yml
      service: configurator_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=ConfiguratorService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=ConfiguratorService
     - GROUP_ID=ConfiguratorService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  configurator_db:
    extends:
      file: ConfiguratorService/docker-compose.yml
      service: configurator_db
   
   
  mail_service:
    extends:
      file: MailService/docker-compose.yml
      service: mail_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=MailService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=MailService
     - GROUP_ID=MailService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  mail_db:
    extends:
      file: MailService/docker-compose.yml
      service: mail_db
  
      
  notifier_service:
    extends:
      file: NotifierService/docker-compose.yml
      service: notifier_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=NotifierService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=NotifierService
     - GROUP_ID=NotifierService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  notifier_db:
    extends:
      file: NotifierService/docker-compose.yml
      service: notifier_db
      
  scheduler_service:
    extends:
      file: SchedulerService/docker-compose.yml
      service: scheduler_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=SchedulerService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=SchedulerService
     - GROUP_ID=SchedulerService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  scheduler_db:
    extends:
      file: SchedulerService/docker-compose.yml
      service: scheduler_db
      
  telegram_service:
    extends:
      file: TelegramService/docker-compose.yml
      service: telegram_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=TelegramService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=TelegramService
     - GROUP_ID=TelegramService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  telegram_db:
    extends:
      file: TelegramService/docker-compose.yml
      service: telegram_db
      
  weather_service:
    extends:
      file: WeatherService/docker-compose.yml
      service: weather_service
    environment:
     - CONSUMER_BOOTSTRAP_SERVERS=kafka:9093
     - CONSUMER_GROUP_ID=WeatherService
     - CONSUMER_AUTO_OFFSET_RESET=earliest
     - PRODUCER_BOOTSTRAP_SERVERS=kafka:9093
     - PRODUCER_CLIENT_ID=WeatherService
     - GROUP_ID=WeatherService
     - TOPIC_TO_SCHEDULER=topic_to_scheduler
     - TOPIC_TO_WEATHER=topic_to_weather
     - TOPIC_TO_MAIL=topic_to_mail
     - TOPIC_TO_TELEGRAM=topic_to_telegram
     - TOPIC_TO_NOTIFIER=topic_to_notifier
     - TOPIC_TO_CONFIGURATION=topic_to_configuration
     - TOPIC_TO_USERDATA=topic_to_userdata
    networks:
      - microservices_network  
    depends_on:
      - kafka
      
  weather_db:
    extends:
      file: WeatherService/docker-compose.yml
      service: weather_db
      
      
volumes:
  userdata_database:
    name: userdata_database
  configurator_database:  
    name: configurator_database
  mail_database:  
    name: mail_database
  telegram_database:  
    name: telegram_database
  notifier_database:
    name: notifier_database
  weather_database:  
    name: weather_database
  scheduler_database:  
    name: scheduler_database
  kafka_data:  
    name: kafka_data
networks:
  microservices_network:
    name: microservices_network


