---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.service: kafka0
  name: kafka0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: kafka0
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.network/microservices-network: "true"
        app.service: kafka0
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://kafka0:9093
            - name: KAFKA_CREATE_TOPICS
              value: topic_to_scheduler:2:1,topic_to_weather:2:1,topic_to_mail:2:1,topic_to_telegram:2:1,topic_to_notifier:2:1,topic_to_configuration:2:1,topic_to_userdata:2:1,topic_to_manager:1:1,topic_to_forecast:1:1
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT
            - name: KAFKA_PORT
              value: "9093"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper0:2181
          image: wurstmeister/kafka:latest
          name: kafka0
          ports:
            - containerPort: 9093
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data-0
      restartPolicy: Always
      volumes:
        - name: kafka-data-0
          persistentVolumeClaim:
            claimName: kafka-data-0
status: {}

---